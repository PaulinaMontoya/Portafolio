{"version":3,"sources":["images/logo.gif","components/Menu.js","components/Main.js","components/About.js","components/Proyects.js","components/Card.js","components/Works.js","components/Contact.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menu","className","to","src","logo","alt","Component","Main","About","Proyects","Card","data","map","item","img","name","description","technologies","tags","href","demo","target","github","Works","Contact","Routes","basename","process","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f7cc7191.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c88e48f6.gif\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../images/logo.gif'; \r\nimport '../styles/menu.css';\r\n\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cointenerMenu\">\r\n        <Link to=\"/\">\r\n        <img src={logo} alt=\"\" className=\"logoMenu\" ></img>\r\n        </Link>\r\n        <div className=\"cointenerButtons\">\r\n          <Link to=\"/about\">\r\n          <p className=\"buttonMenu\">Know me more</p>\r\n          </Link>\r\n          <Link to=\"/works\">\r\n          <p className=\"buttonMenu\">Works</p>\r\n          </Link>\r\n          <Link to=\"/contact\">\r\n          <p className=\"buttonMenu\">Contact me</p>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n\r\n","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu'\r\nimport '../styles/main.css';\r\n\r\nclass Main extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"cointenerMain\">\r\n        <Menu />\r\n        <p className=\"titleMain\">This is gonna be the <span className=\"spanContact\">home</span> page</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu'\r\nimport '../styles/about.css';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cointenerAbout\">\r\n        <Menu />\r\n        <p className=\"titleAbout\">This page is gonna talk <span className=\"spanContact\" >About me</span> :I</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n\r\n","const Proyects = {\r\n    'data': [\r\n        {\r\n            'id': 1,\r\n            'img': 'https://i.ibb.co/42Hgdrz/Mockup-Burger-Kawaii.png',\r\n            'name': 'Burter Kawaii',\r\n            'description': 'Aplicación para tablet pensada para un restaurante de hamburesas con la cual se pueden generar comandas que se guaradan en una base de datos y se mandan a cocina y el cocinero puede avisar cuando la orden está lista y ésta comanda desaparece de la pantalla',\r\n            'demo': 'https://paulinamontoya.github.io/burger-kawaii/',\r\n            'github': 'https://github.com/PaulinaMontoya/burger-kawaii',\r\n            'technologies': [\"React.js\", \"Create-React-App\", \"React-Router\", \"Vanilla-CSS3\", \"Fetch\"]\r\n        },\r\n        {\r\n            'id': 2,\r\n            'img': 'https://i.ibb.co/42Hgdrz/Mockup-Burger-Kawaii.png',\r\n            'name': 'Burter Kawaii',\r\n            'description': 'Aplicación para tablet pensada para un restaurante de hamburesas con la cual se pueden generar comandas que se guaradan en una base de datos y se mandan a cocina y el cocinero puede avisar cuando la orden está lista y ésta comanda desaparece de la pantalla',\r\n            'demo': 'https://paulinamontoya.github.io/burger-kawaii/',\r\n            'github': 'https://github.com/PaulinaMontoya/burger-kawaii',\r\n            'technologies': [\"React.js\", \"Create-React-App\", \"React-Router\", \"Vanilla-CSS3\", \"Fetch\"]\r\n        },\r\n        {\r\n            'id': 3,\r\n            'img': 'https://i.ibb.co/42Hgdrz/Mockup-Burger-Kawaii.png',\r\n            'name': 'Burter Kawaii',\r\n            'description': 'Aplicación para tablet pensada para un restaurante de hamburesas con la cual se pueden generar comandas que se guaradan en una base de datos y se mandan a cocina y el cocinero puede avisar cuando la orden está lista y ésta comanda desaparece de la pantalla',\r\n            'demo': 'https://paulinamontoya.github.io/burger-kawaii/',\r\n            'github': 'https://github.com/PaulinaMontoya/burger-kawaiii',\r\n            'technologies': [\"React.js\", \"Create-React-App\", \"React-Router\", \"Vanilla-CSS3\", \"Fetch\"]\r\n        },\r\n        {\r\n            'id': 4,\r\n            'img': 'https://i.ibb.co/42Hgdrz/Mockup-Burger-Kawaii.png',\r\n            'name': 'Burter Kawaii',\r\n            'description': 'Aplicación para tablet pensada para un restaurante de hamburesas con la cual se pueden generar comandas que se guaradan en una base de datos y se mandan a cocina y el cocinero puede avisar cuando la orden está lista y ésta comanda desaparece de la pantalla',\r\n            'demo': 'https://paulinamontoya.github.io/burger-kawaii/',\r\n            'github': 'https://github.com/PaulinaMontoya/burger-kawaii',\r\n            'technologies': [\"React.js\", \"Create-React-App\", \"React-Router\", \"Vanilla-CSS3\", \"Fetch\"]\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Proyects","import React, { Component } from 'react';\r\nimport '../styles/card.css';\r\n//import Img from '../images/logo.gif';\r\nimport Proyects from './Proyects';\r\n\r\nclass Card extends Component {\r\n\r\n    render() {\r\n        /*\r\n              let array =  function technologiesArray() {\r\n                    Proyects.data.map((item) => {\r\n                      console.log()\r\n                    })\r\n                };\r\n        \r\n        */\r\n        return (\r\n            <div className=\"cointenerAllCards\">\r\n                {Proyects.data.map((item) =>\r\n                    <div className=\"cointenerCard\">\r\n                        <img className=\"imgCard\" src={item.img} alt={item.name} />\r\n                        <div className=\"infoProyect\">\r\n                            <h3 className=\"proyectName\">{item.name}</h3>\r\n                            <p className=\"descriptionProyect\">{item.description}</p>\r\n                            <div>\r\n                                <h4 className=\"technilogies\"><strong>Technologies</strong></h4>\r\n                                {item.technologies.map((tags) =>\r\n                                    <ul className=\"containerTagList\">\r\n                                        <li className=\"tagList\">{tags}</li>\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"cointenerButtons\">\r\n                                <button className=\"buttonProyect\"><a href={item.demo} target=\"_blank\">DEMO</a></button>\r\n                                <button className=\"buttonProyect\"><a href={item.github} target=\"_blank\">GitHub</a></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu';\r\nimport Card from '../components/Card';\r\nimport '../styles/works.css';\r\n\r\n\r\nclass Works extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cointenerWorks\">\r\n        <Menu />\r\n        <div className=\"cointenerCardsProyects\">\r\n        <p className=\"titleWorks\">Here I´m gonna show my <span className=\"spanContact\">Works</span> :P</p>\r\n        <Card />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Works;\r\n\r\n","import React, { Component } from 'react';\r\nimport Menu from '../components/Menu'\r\nimport '../styles/contact.css';\r\n\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"cointenerContact\">\r\n        <Menu />\r\n        <p className=\"titleContact\">And here everybody can <span className=\"spanContact\">Contact me</span> :D</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Main from './components/Main'\r\nimport About from './components/About'\r\nimport Works from './components/Works'\r\nimport Contact from './components/Contact'\r\n\r\n\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n   <Switch>/>\r\n        <Route exact path=\"/\" component={Main}/>\r\n        <Route exact path=\"/about\" component={About}/>\r\n        <Route exact path=\"/works\" component={Works}/>\r\n        <Route exact path=\"/contact\" component={Contact}/>\r\n    </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Routes","import React from 'react';\nimport Routes from './Routes.js'\n\nfunction App() {\n  return (\n    <div>\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}